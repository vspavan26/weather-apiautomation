Feature: Verify weather API

  @Smoke
  Scenario Outline: Get state code test on weather API              [90m# WeatherAPI.feature:4[0m
    [36mGiven [0m[36muser provides key <key> lat <lat> lon <lon> as parameters[0m
    [36mWhen [0m[36muser invokes state code service as GET[0m
    [36mThen [0m[36mverify status code is 200[0m
    [36mThen [0m[36mprint the state code from response[0m

    Examples: 
[34m{"data":[{"rh":77,"pod":"d","lon":-73.94,"pres":1011,"timezone":"America\/New_York","ob_time":"2019-08-03 12:08","country_code":"US","clouds":75,"ts":1564834080,"solar_rad":228.6,"state_code":"NY","city_name":"Long Island City","wind_spd":1.34,"last_ob_time":"2019-08-03T12:08:00","wind_cdir_full":"south-southwest","wind_cdir":"SSW","slp":1013,"vis":5,"h_angle":-56.3,"sunset":"00:09","dni":678.67,"dewpt":20.2,"snow":0,"uv":2.90646,"precip":0,"wind_dir":199,"sunrise":"09:54","ghi":326.9,"dhi":78.85,"aqi":50,"lat":40.73,"weather":{"icon":"c02d","code":"802","description":"Scattered clouds"},"datetime":"2019-08-03:12","temp":24.4,"station":"D9152","elev_angle":22.03,"app_temp":25}],"count":1}
[0m
[34mThe state code from the response is NY[0m

  @Smoke
  Scenario Outline: Get state code test on weather API                                                  [90m# WeatherAPI.feature:12[0m
    [32mGiven [0m[32muser provides key [0m[32m[1ma0f75544b9da4790a507dfb05e174f7e[0m[32m lat [0m[32m[1m40.730610[0m[32m lon [0m[32m[1m-73.935242[0m[32m as parameters[0m [90m# WeatherStepDef.user_provides_key(String,String,String)[0m
    [32mWhen [0m[32muser invokes state code service as GET[0m                                                         [90m# WeatherStepDef.user_invokes_state_service()[0m
    [32mThen [0m[32mverify status code is 200[0m                                                                      [90m# WeatherStepDef.verify_status_code()[0m
    [32mThen [0m[32mprint the state code from response[0m                                                             [90m# WeatherStepDef.print_state_code()[0m

  @Smoke
  Scenario Outline: Get weather test on weather API                 [90m# WeatherAPI.feature:15[0m
    [36mGiven [0m[36muser provides key <key> postcode <postcode> as parameters[0m
    [36mWhen [0m[36muser invokes weather service as GET[0m
    [36mThen [0m[36mverify status code is 200[0m
    [36mThen [0m[36mprint the utc timestamp and weather from response[0m

    Examples: 

  @Smoke
  Scenario Outline: Get weather test on weather API                                      [90m# WeatherAPI.feature:23[0m
    [32mGiven [0m[32muser provides key [0m[32m[1ma0f75544b9da4790a507dfb05e174f7e[0m[32m postcode [0m[32m[1m2142[0m[32m as parameters[0m [90m# WeatherStepDef.user_provides_key(String,String)[0m
    [32mWhen [0m[32muser invokes weather service as GET[0m                                             [90m# WeatherStepDef.user_invokes_weather_service()[0m
    [31mThen [0m[31mverify status code is 200[0m                                                       [90m# WeatherStepDef.verify_status_code()[0m
      [31mjava.lang.AssertionError: 1 expectation failed.
      Expected status code <200> doesn't match actual status code <403>.
      
      	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
      	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
      	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
      	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
      	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:80)
      	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:74)
      	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
      	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:60)
      	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:235)
      	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
      	at com.jayway.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:598)
      	at com.jayway.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
      	at com.jayway.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:760)
      	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
      	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
      	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
      	at java.lang.reflect.Method.invoke(Method.java:498)
      	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
      	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
      	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
      	at com.jayway.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:120)
      	at com.jayway.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
      	at com.jayway.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:128)
      	at com.jayway.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:117)
      	at com.api.StepDefinitions.WeatherStepDef.verify_status_code(WeatherStepDef.java:53)
      	at âœ½.Then verify status code is 200(WeatherAPI.feature:18)
      [0m
    [36mThen [0m[36mprint the utc timestamp and weather from response[0m                               [90m# WeatherStepDef.print_weather_timestamp()[0m
